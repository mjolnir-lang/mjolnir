

/// Conditional execution
///
/// In Thumb instructions, the condition, if it is not AL, is normally encoded in a preceding IT instruction. However,
/// ARMv6-M does not support the IT instruction. This means that:
/// - the <c> suffix must be omitted or AL in all instruction mnemonics except B<c>.
/// - in the pseudocode in this manual:
///     -  any reference to InITBlock() returns FALSE.
///     -  any reference to LastInITBlock() returns FALSE.
/// In ARMv6-M, the B<c> instruction can be executed conditionally, based on the values of the APSR condition flags.
/// Table A6-1 shows the available conditions, and associated encodings of the 4-bit cond field, for this instruction.
///
/// | 0000 | EQ | Equal                        | Equal                        | Z == 1
/// | 0001 | NE | Not equal                    | Not equal                    | Z == 0
/// | 0010 | CS | Carry set                    | Carry set                    | C == 1
/// | 0011 | CC | Carry clear                  | Carry clear                  | C == 0
/// | 0100 | MI | Minus, negative              | Minus, negative              | N == 1
/// | 0101 | PL | Plus, positive or zero       | Plus, positive or zero       | N == 0
/// | 0110 | VS | Overflow                     | Overflow                     | V == 1
/// | 0111 | VC | No overflow                  | No overflow                  | V == 0
/// | 1000 | HI | Unsigned higher              | Unsigned higher              | C == 1 and Z == 0
/// | 1001 | LS | Unsigned lower or same       | Unsigned lower or same       | C == 0 or Z == 1
/// | 1010 | GE | Signed greater than or equal | Signed greater than or equal | N == V
/// | 1011 | LT | Signed less than             | Signed less than             | N != V
/// | 1100 | GT | Signed greater than          | Signed greater than          | Z == 0 and N == V
/// | 1101 | LE | Signed less than or equal    | Signed less than or equal    | Z == 1 or N != V
/// | 1110 | -- | (AL) Always (unconditional)  | (AL) Always (unconditional)  | Any
///
/// a. HS (unsigned higher or same) is a synonym for CS.
/// b. LO (unsigned lower) is a synonym for CC.
/// c. This value is never encoded in any ARMv6-M Thumb instruction.
/// d. AL is an optional mnemonic extension for always.
enum<u8> Cond {
    
    /// EQ
    ///
    /// Equal `Z == 1`
    Eq = 0b0000u;
    
    /// NE
    ///
    /// Not equal `Z == 0`
    Ne = 0b0001u;
    
    /// CS
    ///
    /// Carry set `C == 1`
    Cs = 0b0010u;
    
    /// HS
    ///
    /// (unsigned higher or same) is a synonym for CS.
    Hs = Cs;
    
    /// CC
    ///
    /// Carry clear `C == 0`
    Cc = 0b0011u;
    
    /// LO
    ///
    /// (unsigned lower) is a synonym for CC.
    Lo = Cc;
    
    /// MI
    ///
    /// Minus, negative `N == 1`
    Mi = 0b0100u;
    
    /// PL
    ///
    /// Plus, positive or zero `N == 0`
    Pl = 0b0101u;
    
    /// VS
    ///
    /// Overflow `V == 1`
    Vs = 0b0110u;
    
    /// VC
    ///
    /// No overflow `V == 0`
    Vc = 0b0111u;
    
    /// HI
    ///
    /// Unsigned higher `C == 1 && Z == 0`
    Hi = 0b1000u;
    
    /// LS
    ///
    /// Unsigned lower or same `C == 0 || Z == 1`
    Ls = 0b1001u;
    
    /// GE
    ///
    /// Signed greater than or equal `N == V`
    Ge = 0b1010u;
    
    /// LT
    ///
    /// Signed less than `N != V`
    Lt = 0b1011u;
    
    /// GT
    ///
    /// Signed greater than `Z == 0 && N == V`
    Gt = 0b1100u;
    
    /// LE
    ///
    /// Signed less than or equal `Z == 1 || N != V`
    Le = 0b1101u;

    /// AL
    ///
    /// AL is an optional mnemonic extension for always.
    /// This value is never encoded in any ARMv6-M Thumb instruction.
    Al = 0b1110u;
}
