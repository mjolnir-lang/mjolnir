


///
/// Response Message
///

/// A Response Message sent as a result of a request.
/// If a request doesn't provide a result value the receiver of a request still needs to
/// return a response message to conform to the JSON-RPC specification.
/// The result property of the ResponseMessage should be set to null in this case to signal a successful request.


interface LspResponseMessage {
    implements LspMessage;

    /// The request id.
    (LspInteger | LspString | null) id();


    /// The result of a request. This member is REQUIRED on success.
    /// This member MUST NOT exist if there was an error invoking the method.
    (LspString | LspNumber | LspBoolean | LspArray | LspObject | null)? result();


    /// The error object in case a request fails.
    LspResponseError? error();
}


interface LspResponseError {

    /// A number indicating the error type that occurred.
    LspInteger code();


    /// A string providing a short description of the error.
    LspString message();


    /// A primitive or structured value that contains additional
    /// information about the error. Can be omitted.
    (LspString | LspNumber | LspBoolean | LspArray | LspObject | null)? data();
}


enum<LspInteger> LspErrorCodes {

    // Defined by JSON-RPC
    PARSE_ERROR = -32700;
    INVALID_REQUEST = -32600;
    METHOD_NOT_FOUND = -32601;
    INVALID_PARAMS = -32602;
    INTERNAL_ERROR = -32603;

    /// This is the start range of JSON-RPC reserved error codes.
    /// It doesn't denote a real error code. No LSP error codes should
    /// be defined between the start and end range. For backwards
    /// compatibility the `SERVER_NOT_INITIALIZED` and the `UNKNOWN_ERROR_CODE`
    /// are left in the range.
    @api(3.16)
    JSONRPC_RESERVED_ERROR_RANGE_START = -32099;

    @deprecated()
    SERVER_ERROR_START = JSONRPC_RESERVED_ERROR_RANGE_START;

    /// Error code indicating that a server received a notification or
    /// request before the server has received the `initialize` request.
    ////
    SERVER_NOT_INITIALIZED = -32002;
    UNKNOWN_ERROR_CODE = -32001;

    /// This is the end range of JSON-RPC reserved error codes.
    /// It doesn't denote a real error code.
    @api(3.16)
    JSONRPC_RESERVED_ERROR_RANGE_END = -32000;

    @deprecated()
    SERVER_ERROR_END = JSONRPC_RESERVED_ERROR_RANGE_END;

    /// This is the start range of LSP reserved error codes.
    /// It doesn't denote a real error code.
    @api(3.16)
    LSP_RESERVED_ERROR_RANGE_START = -32899;

    /// A request failed but it was syntactically correct, e.g the
    /// method name was known and the parameters were valid. The error
    /// message should contain human readable information about why
    /// the request failed.
    @api(3.17)
    REQUEST_FAILED = -32803;

    /// The server cancelled the request. This error code should
    /// only be used for requests that explicitly support being
    /// server cancellable.
    @api(3.17)
    SERVER_CANCELLED = -32802;

    /// The server detected that the content of a document got
    /// modified outside normal conditions. A server should
    /// NOT send this error code if it detects a content change
    /// in it unprocessed messages. The result even computed
    /// on an older state might still be useful for the client.
    ///
    /// If a client decides that a result is not of any use anymore
    /// the client should cancel the request.
    CONTENT_MODIFIED = -32801;

    /// The client has canceled a request and a server as detected
    /// the cancel.
    REQUEST_CANCELLED = -32800;

    /// This is the end range of LSP reserved error codes.
    /// It doesn't denote a real error code.
    @api(3.16)
    LSP_RESERVED_ERROR_RANGE_END = -32800;
}
